name: CI

on:
  push:
    branches: [ '**' ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:  

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - uses: actions/checkout@v3

      # Install required packages. Adjust the list according to your project requirements.
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-9 g++-9 \
            build-essential \
            libboost-all-dev \
            rpm \
            libhdf5-dev \
            cmake \
            ninja-build
          
          # Set gcc-9 and g++-9 as the default compilers
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100

          gcc --version
          g++ --version


      # Configure the project with tests enabled
      - name: Configure CMake no tests
        run: |
          mkdir build
          cd build
          export CC=gcc-9
          export CXX=g++-9
          cmake .. -DCMAKE_C_COMPILER=gcc-9 -DCMAKE_CXX_COMPILER=g++-9 -DCMAKE_BUILD_TYPE=Release

      # Build the project using make
      - name: Build
        run: |
          cd build
          make
          sudo make install
      
      - name: Configure CMake with tests and build
        run: |
          cd build
          cmake .. -DENABLE_TESTS=ON -DCMAKE_C_COMPILER=gcc-9 -DCMAKE_CXX_COMPILER=g++-9
          make

      # Run tests using ctest
      - name: Run tests
        run: |
          cd build/Tests
          ctest --output-on-failure

      - name: Package with CPack
        run: |
          cd build
          sudo cpack
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PySysLinkBase-packages
          path: |
            build/*.deb
            build/*.rpm
            build/*.tar.gz
    
